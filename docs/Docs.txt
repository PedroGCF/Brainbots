=== Git Cheat Sheet ‚Äî Tudo que voc√™ precisa para Arduino ===

# 1Ô∏è‚É£ Inicializar reposit√≥rio

* `git init` ‚Üí cria um reposit√≥rio Git local na pasta atual.
* `git status` ‚Üí mostra o estado atual do reposit√≥rio (arquivos modificados, n√£o rastreados, etc).

# 2Ô∏è‚É£ Adicionar mudan√ßas

* `git add arquivo.ext` ‚Üí adiciona um arquivo espec√≠fico para o pr√≥ximo commit.
* `git add .` ‚Üí adiciona **todas as mudan√ßas** (novos arquivos e modifica√ß√µes).
* `git add -A` ‚Üí adiciona todas as mudan√ßas, incluindo renomea√ß√µes e exclus√µes.

# 3Ô∏è‚É£ Criar commit

* `git commit -m "mensagem"` ‚Üí salva as mudan√ßas no hist√≥rico.
* Mensagem curta e clara, ex: `feat: adicionar controle PID`.

# 4Ô∏è‚É£ Enviar para GitHub

* `git remote add origin URL_do_repositorio` ‚Üí conecta o reposit√≥rio local ao GitHub.
* `git branch -M main` ‚Üí define a branch principal como main.
* `git push -u origin main` ‚Üí envia as altera√ß√µes pro GitHub.
* `git push` ‚Üí envia altera√ß√µes subsequentes.

# 5Ô∏è‚É£ Atualizar reposit√≥rio local

* `git pull` ‚Üí baixa altera√ß√µes do GitHub para o seu computador.

# 6Ô∏è‚É£ Renomear arquivos

* `git mv antigo_nome.ino novo_nome.ino` ‚Üí renomeia e mant√©m hist√≥rico.
* Se renomeou manualmente:

  * `git add novo_nome.ino`
  * `git rm antigo_nome.ino`
  * `git commit -m "rename: antigo_nome para novo_nome"`

# 7Ô∏è‚É£ Excluir arquivos

* `git rm arquivo.ext` ‚Üí remove do Git e do disco.
* `git rm --cached arquivo.ext` ‚Üí remove do Git, mas mant√©m no disco.

# 8Ô∏è‚É£ Voltar vers√µes / desfazer

* `git reset --soft HEAD~1` ‚Üí desfaz o √∫ltimo commit, mant√©m mudan√ßas.
* `git reset --hard HEAD~1` ‚Üí desfaz o √∫ltimo commit e descarta mudan√ßas.
* `git checkout nome_arquivo.ext` ‚Üí desfaz altera√ß√µes de um arquivo espec√≠fico.

# 9Ô∏è‚É£ Trabalhar com branches

* `git branch` ‚Üí lista as branches.
* `git branch nome_branch` ‚Üí cria uma branch.
* `git checkout nome_branch` ‚Üí muda para outra branch.
* `git merge nome_branch` ‚Üí junta branch no atual.

# üî• Dicas pr√°ticas para Arduino

* Sempre organize arquivos em pastas (`src/`, `docs/`, `old/`).
* Use commits s√≥ para mudan√ßas significativas: novos recursos, renomea√ß√µes, corre√ß√µes.
* Para renomear v√°rios arquivos: `git add -A && git commit -m "rename files"`
* Antes de come√ßar a mexer, fa√ßa `git pull` para evitar conflitos.
* Para conferir tudo que mudou antes de commit: `git status` e `git diff`.

---

Git √© sobre **salvar mudan√ßas e manter hist√≥rico**. Qualquer mudan√ßa que voc√™ quiser ver no GitHub **precisa estar em um commit**.
